name: Build and Release Installers

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest, macos-13, macos-14]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: 'temurin'
        java-version: '21'
        cache: 'maven'

    - name: Build Application and Installer with Maven
      run: mvn -B clean package

    - name: Upload Installer Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.os }}
        path: target/installer/*

  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Read version from file
      id: read_version
      run: |
        VERSION=$(cat version.txt)
        echo "VERSION=$VERSION" >> $GITHUB_ENV
        echo "VERSION_TAG=v$VERSION" >> $GITHUB_ENV

    - name: Check if Git tag already exists
      id: check_tag
      run: |
        if git rev-parse "$VERSION_TAG" >/dev/null 2>&1; then
          echo "Tag $VERSION_TAG already exists. Skipping release."
          echo "EXISTS=true" >> $GITHUB_ENV
        else
          echo "EXISTS=false" >> $GITHUB_ENV
        fi
      env:
        VERSION_TAG: ${{ env.VERSION_TAG }}

    - name: Exit if tag exists
      if: env.EXISTS == 'true'
      run: exit 0

    - name: Download all installer artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-artifacts

    - name: Display structure of downloaded files
      run: ls -R all-artifacts

    - name: Create Git Tag
      run: |
        git config user.name "github-actions"
        git config user.email "github-actions@github.com"
        git tag $VERSION_TAG
        git push origin $VERSION_TAG
      env:
        VERSION_TAG: ${{ env.VERSION_TAG }}

    - name: Create GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: ${{ env.VERSION_TAG }}
        name: CleanView ${{ env.VERSION_TAG }}
        body: |
          üöÄ New CleanView Release - ${{ env.VERSION_TAG }}

          Installers for:
          - ü™ü Windows
          - üçé macOS Intel
          - üçé macOS Apple Silicon

          üéØ Keep it Clean. Keep it Fast.
        files: all-artifacts/**/*
      env:
        GITHUB_TOKEN: ${{ secrets.CV_PAT }}
