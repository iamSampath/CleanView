name: Build and Release Installers

on:
  push:
    branches: [main]
  workflow_dispatch:

jobs:
  build:
    strategy:
      matrix:
        os: [windows-latest, macos-latest]
    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout Code
      uses: actions/checkout@v4

    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        distribution: temurin
        java-version: 21

    - name: Verify Maven
      run: mvn -v

    - name: Build App
      run: mvn clean install

    - name: Package with jpackage (Windows)
      if: runner.os == 'Windows'
      shell: cmd
      run: |
        jpackage --type exe ^
        --input target ^
        --dest installer ^
        --name CleanView ^
        --main-jar CleanView-1.0.jar ^
        --main-class com.sampath.pdfviewer.MainApp ^
        --icon src/main/resources/icon.ico ^
        --win-menu ^
        --win-shortcut ^
        --win-dir-chooser ^
        --win-per-user-install

    - name: Package with jpackage (macOS)
      if: runner.os == 'macOS'
      run: |
        jpackage \
          --type dmg \
          --input target \
          --dest installer \
          --name CleanView \
          --main-jar CleanView-1.0.jar \
          --main-class com.sampath.pdfviewer.MainApp \
          --icon src/main/resources/icon.icns \
          --mac-package-name CleanView \
          --mac-package-identifier com.cleanview.app

    - name: Upload Installer Artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ runner.os }}-installer
        path: installer/*
        
  release:
    needs: build
    runs-on: ubuntu-latest

    steps:
    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: all-artifacts

    - name: Show downloaded files
      run: ls -R all-artifacts

    - name: Upload to GitHub Release
      uses: softprops/action-gh-release@v2
      with:
        tag_name: v1.0.${{ github.run_number }}
        name: CleanView Release v1.0.${{ github.run_number }}
        files: all-artifacts/**/*  # Pick up both .exe and .dmg
      env:
        GITHUB_TOKEN: ${{ secrets.CV_PAT }}
